@model DataLayer.Products

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutDefault.cshtml";
}

<h2>Edit Product</h2>


@{
    if (ViewBag.errorSelectedeGroup == true)
    {
        <div class="alert alert-danger">
            <p>Hey boy, please select groups.</p>
        </div>
    }
}



@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(p => p.ProductID);
    @Html.HiddenFor(p => p.ImageName);
    @Html.HiddenFor(p => p.CreateDate);



    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescrioption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescrioption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescrioption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <span class="control-label col-md-2">Tags</span>
            <div class="col-md-10">
                <input type="text" name="tags" placeholder="Please separete words with ," class="form-control" />
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>

    </div>





    <div class="panel panel-primary">
        <div class="panel-heading" style="color: #4272d7;">Image Product</div>
        <div class="panel-body">
            <img id="productImages" style="margin:8px; max-width:250px;" class="thumbnail" src="~/Images/ProductImages/@Model.ImageName" />

            <div class="form-group">
                @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="ProductImage" name="ImgUp" />
                    @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="panel panel-primary">
        <div class="panel-heading" style="color: #4272d7;">Product Groups</div>
        <div class="panel-body">
            @{
                IEnumerable<DataLayer.ProductGroup> groups = ViewBag.Groups;
                IEnumerable<DataLayer.ProductSelectGroup> groupsChecked = ViewBag.GroupsChecked;

                <ul>
                    @foreach (var item in groups.Where(g => g.ParentID == null))
                    {
                        int count = 0;
                        <li>
                            @foreach (var Check in groupsChecked)
                            {
                                if (Check.GroupID == item.GroupID)
                                {
                                    <input type="checkbox" name="SelectedGroup" value="@item.GroupID" checked="checked" /><span><b> @item.GroupTitle</b></span>
                                    count = 1;
                                }
                            }
                            @if (count == 0) 
                            {
                            <input type="checkbox" name="SelectedGroup" value="@item.GroupID" /><span><b> @item.GroupTitle</b></span>
                            }

                            <ul>
                                @foreach (var subGroup in groups.Where(g => g.ParentID == item.GroupID))
                                {
                                    int cut = 0;
                                <li>
                                    @foreach (var Check in groupsChecked)
                                    {
                                        if (Check.GroupID == subGroup.GroupID)
                                        {
                                            <input type="checkbox" name="SelectedGroup" value="@subGroup.GroupID" checked="checked" /><span> @subGroup.GroupTitle</span>
                                            cut = 1;
                                        }
                                    }
                                    @if (cut == 0)
                                    {
                                        <input type="checkbox" name="SelectedGroup" value="@subGroup.GroupID" /><span> @subGroup.GroupTitle</span>
                                    }



                                </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>

}





<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#productImages').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#ProductImage").change(function () {
            readURL(this);
        });
    </script>
}